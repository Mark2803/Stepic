/*
На ввод поступает целое число n.

Программа должна вывести на экран массив размером nхn,
где все числа над побочной диагональю это 0,
сама побочная диагональ заполнена 1, а все числа ниже
побочной диагонали заполнены 2.
Sample Input:

25
Sample Output:

0000000000000000000000001
0000000000000000000000012
0000000000000000000000122
0000000000000000000001222
0000000000000000000012222
0000000000000000000122222
0000000000000000001222222
0000000000000000012222222
0000000000000000122222222
0000000000000001222222222
0000000000000012222222222
0000000000000122222222222
0000000000001222222222222
0000000000012222222222222
0000000000122222222222222
0000000001222222222222222
0000000012222222222222222
0000000122222222222222222
0000001222222222222222222
0000012222222222222222222
0000122222222222222222222
0001222222222222222222222
0012222222222222222222222
0122222222222222222222222
1222222222222222222222222
 */

import java.util.Scanner;

public class SideDiagonal {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        System.out.print("Введите размер массива: ");
        int n = in.nextInt(); // Размер массива
        int[][] arr = new int[n][n];

        // Заполнение массива
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (j == n - 1 - i) { // Побочная диагональ
                    arr[i][j] = 1;
                } else if (j < n - 1 - i) { // Выше побочной диагонали
                    arr[i][j] = 0;
                } else { // Ниже побочной диагонали
                    arr[i][j] = 2;
                }
            }
        }

        // Вывод массива
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.print(arr[i][j]);
            }
            System.out.println(); // Переход на новую строку
        }
    }
}
